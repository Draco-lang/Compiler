<?xml version="1.0" encoding="utf-8" ?>
<Tree
  xmlns="http://draco-lang.com/bound-tree/bound-nodes"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://draco-lang.com/bound-tree/bound-nodes ../../../Draco.SourceGeneration/BoundTree/BoundNodes.xsd"
  Root="BoundNode">
  <PredefinedNode Name="BoundNode" />

  <AbstractNode Name="BoundStatement" Base="BoundNode" />
  <AbstractNode Name="BoundExpression" Base="BoundNode" />
  <AbstractNode Name="BoundLvalue" Base="BoundNode" />

  <!-- Statements -->

  <Node Name="BoundUnexpectedStatement" Base="BoundStatement">
  </Node>

  <Node Name="BoundNoOpStatement" Base="BoundStatement">
  </Node>

  <Node Name="BoundLabelStatement" Base="BoundStatement">
    <Field Name="Label" Type="LabelSymbol" />
  </Node>

  <!-- Kept around so desugaring can collect -->
  <Node Name="BoundLocalFunction" Base="BoundStatement">
    <!-- The corresponding symbol -->
    <Field Name="Symbol" Type="FunctionSymbol" />
  </Node>

  <!-- Used for desugaring -->
  <Node Name="BoundConditionalGotoStatement" Base="BoundStatement">
    <Field Name="Condition" Type="BoundExpression" />
    <Field Name="Target" Type="LabelSymbol" />
  </Node>

  <Node Name="BoundExpressionStatement" Base="BoundStatement">
    <Field Name="Expression" Type="BoundExpression" />
  </Node>

  <!-- Debug info -->
  <Node Name="BoundSequencePointStatement" Base="BoundStatement">
    <!-- The wrapped statement, if any -->
    <Field Name="Statement" Type="BoundStatement?" />
    <!-- The location, if null, this is a hidden sequence point -->
    <Field Name="Range" Type="Api.Syntax.SyntaxRange?" />
    <!-- Emit NOP if true -->
    <Field Name="EmitNop" Type="bool" />
  </Node>

  <Node Name="BoundLocalDeclaration" Base="BoundStatement">
    <Field Name="Local" Type="LocalSymbol" />
    <Field Name="Value" Type="BoundExpression?" />
  </Node>

  <!-- Expressions -->

  <Node Name="BoundUnexpectedExpression" Base="BoundExpression">
  </Node>

  <Node Name="BoundUnitExpression" Base="BoundExpression">
  </Node>

  <!-- Debug info -->
  <Node Name="BoundSequencePointExpression" Base="BoundExpression">
    <!-- The wrapped expression -->
    <Field Name="Expression" Type="BoundExpression" />
    <!-- The location, if null, this is a hidden sequence point -->
    <Field Name="Range" Type="Api.Syntax.SyntaxRange?" />
    <!-- Emit NOP if true -->
    <Field Name="EmitNop" Type="bool" />
  </Node>

  <Node Name="BoundGotoExpression" Base="BoundExpression">
    <Field Name="Target" Type="LabelSymbol" />
  </Node>

  <Node Name="BoundBlockExpression" Base="BoundExpression">
    <Field Name="Locals" Type="ImmutableArray&lt;LocalSymbol&gt;" />
    <Field Name="Statements" Type="ImmutableArray&lt;BoundStatement&gt;" />
    <Field Name="Value" Type="BoundExpression" />
  </Node>

  <Node Name="BoundReturnExpression" Base="BoundExpression">
    <Field Name="Value" Type="BoundExpression" />
  </Node>

  <Node Name="BoundIfExpression" Base="BoundExpression">
    <Field Name="Condition" Type="BoundExpression" />
    <Field Name="Then" Type="BoundExpression" />
    <Field Name="Else" Type="BoundExpression" />
    <Field Name="Type" Type="TypeSymbol" Override="true" />
  </Node>

  <Node Name="BoundWhileExpression" Base="BoundExpression">
    <Field Name="Condition" Type="BoundExpression" />
    <Field Name="Then" Type="BoundExpression" />
    <Field Name="ContinueLabel" Type="LabelSymbol" />
    <Field Name="BreakLabel" Type="LabelSymbol" />
  </Node>

  <Node Name="BoundMemberExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression" />
    <Field Name="Member" Type="Symbol" />
    <Field Name="Type" Type="TypeSymbol" Override="true" />
  </Node>

  <Node Name="BoundCallExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression?" />
    <Field Name="Method" Type="FunctionSymbol" />
    <Field Name="Arguments" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundIndirectCallExpression" Base="BoundExpression">
    <Field Name="Method" Type="BoundExpression" />
    <Field Name="Arguments" Type="ImmutableArray&lt;BoundExpression&gt;" />
    <Field Name="Type" Type="TypeSymbol" Override="true" />
  </Node>

  <Node Name="BoundUnaryExpression" Base="BoundExpression">
    <Field Name="Operator" Type="FunctionSymbol" />
    <Field Name="Operand" Type="BoundExpression" />
    <Field Name="Type" Type="TypeSymbol" Override="true" />
  </Node>

  <Node Name="BoundBinaryExpression" Base="BoundExpression">
    <Field Name="Operator" Type="FunctionSymbol" />
    <Field Name="Left" Type="BoundExpression" />
    <Field Name="Right" Type="BoundExpression" />
    <Field Name="Type" Type="TypeSymbol" Override="true" />
  </Node>

  <Node Name="BoundAndExpression" Base="BoundExpression">
    <Field Name="Left" Type="BoundExpression" />
    <Field Name="Right" Type="BoundExpression" />
  </Node>

  <Node Name="BoundOrExpression" Base="BoundExpression">
    <Field Name="Left" Type="BoundExpression" />
    <Field Name="Right" Type="BoundExpression" />
  </Node>

  <Node Name="BoundAssignmentExpression" Base="BoundExpression">
    <Field Name="CompoundOperator" Type="FunctionSymbol?" />
    <Field Name="Left" Type="BoundLvalue" />
    <Field Name="Right" Type="BoundExpression" />
  </Node>

  <Node Name="BoundObjectCreationExpression" Base="BoundExpression">
    <Field Name="ObjectType" Type="TypeSymbol" />
    <Field Name="Constructor" Type="FunctionSymbol" />
    <Field Name="Arguments" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundArrayCreationExpression" Base="BoundExpression">
    <Field Name="ElementType" Type="TypeSymbol" />
    <Field Name="Sizes" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundArrayAccessExpression" Base="BoundExpression">
    <Field Name="Array" Type="BoundExpression" />
    <Field Name="Indices" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundLocalExpression" Base="BoundExpression">
    <Field Name="Local" Type="LocalSymbol" />
  </Node>

  <Node Name="BoundGlobalExpression" Base="BoundExpression">
    <Field Name="Global" Type="GlobalSymbol" />
  </Node>

  <Node Name="BoundFieldExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression?"/>
    <Field Name="Field" Type="FieldSymbol" />
  </Node>

  <Node Name="BoundPropertyGetExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression?"/>
    <Field Name="Getter" Type="FunctionSymbol" />
  </Node>

  <Node Name="BoundPropertySetExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression?"/>
    <Field Name="Setter" Type="FunctionSymbol" />
    <Field Name="Value" Type="BoundExpression"/>
  </Node>

  <Node Name="BoundIndexGetExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression"/>
    <Field Name="Getter" Type="FunctionSymbol" />
    <Field Name="Indices" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundIndexSetExpression" Base="BoundExpression">
    <Field Name="Receiver" Type="BoundExpression"/>
    <Field Name="Setter" Type="FunctionSymbol" />
    <Field Name="Value" Type="BoundExpression"/>
    <Field Name="Indices" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>

  <Node Name="BoundParameterExpression" Base="BoundExpression">
    <Field Name="Parameter" Type="ParameterSymbol" />
  </Node>

  <Node Name="BoundFunctionGroupExpression" Base="BoundExpression">
    <Field Name="Functions" Type="ImmutableArray&lt;FunctionSymbol&gt;" />
  </Node>

  <Node Name="BoundReferenceErrorExpression" Base="BoundExpression">
    <Field Name="Symbol" Type="Symbol" />
  </Node>

  <Node Name="BoundLiteralExpression" Base="BoundExpression">
    <Field Name="Value" Type="object?" />
  </Node>

  <Node Name="BoundStringExpression" Base="BoundExpression">
    <Field Name="Parts" Type="ImmutableArray&lt;BoundStringPart&gt;" />
  </Node>

  <Node Name="BoundRelationalExpression" Base="BoundExpression">
    <Field Name="First" Type="BoundExpression" />
    <Field Name="Comparisons" Type="ImmutableArray&lt;BoundComparison&gt;" />
  </Node>

  <Node Name="BoundComparison" Base="BoundNode">
    <Field Name="Operator" Type="FunctionSymbol" />
    <Field Name="Next" Type="BoundExpression" />
  </Node>

  <AbstractNode Name="BoundStringPart" Base="BoundNode" />

  <Node Name="BoundUnexpectedStringPart" Base="BoundStringPart">
  </Node>

  <Node Name="BoundStringText" Base="BoundStringPart">
    <Field Name="Text" Type="string" />
  </Node>

  <Node Name="BoundStringInterpolation" Base="BoundStringPart">
    <Field Name="Value" Type="BoundExpression" />
  </Node>

  <!-- LValues -->

  <!-- Used for syntax errors -->
  <Node Name="BoundUnexpectedLvalue" Base="BoundLvalue">
  </Node>

  <!-- Used when syntax is ok, but illegal as an LValue -->
  <Node Name="BoundIllegalLvalue" Base="BoundLvalue">
  </Node>

  <Node Name="BoundLocalLvalue" Base="BoundLvalue">
    <Field Name="Local" Type="LocalSymbol" />
  </Node>

  <Node Name="BoundGlobalLvalue" Base="BoundLvalue">
    <Field Name="Global" Type="GlobalSymbol" />
  </Node>

  <Node Name="BoundFieldLvalue" Base="BoundLvalue">
    <Field Name="Receiver" Type="BoundExpression?"/>
    <Field Name="Field" Type="FieldSymbol" />
  </Node>

  <Node Name="BoundArrayAccessLvalue" Base="BoundLvalue">
    <Field Name="Array" Type="BoundExpression" />
    <Field Name="Indices" Type="ImmutableArray&lt;BoundExpression&gt;" />
  </Node>
</Tree>
