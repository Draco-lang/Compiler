using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace Draco.RedGreenTree;

public abstract class GeneratorBase
{
    protected string GeneratorName => nameof(Draco.RedGreenTree);
    protected string GeneratorVersion => "0.1.0";

    protected string HeaderComment =>
        $"// Generated by {this.GeneratorName} {this.GeneratorVersion}";

    protected string GeneratedAttribute =>
        $"[System.CodeDom.Compiler.GeneratedCodeAttribute(\"{this.GeneratorName}\", \"{this.GeneratorVersion}\")]";

    protected abstract string Generate();

    protected static string ToCamelCase(string text) => text.Length == 0
        ? string.Empty
        : $"{char.ToLower(text[0])}{text.Substring(1)}";

    protected static string SettingsToHeaderComment(object? settings)
    {
        if (settings is null) return string.Empty;

        var result = new StringBuilder();
        result.AppendLine("// Settings used:");
        foreach (var prop in settings.GetType().GetProperties(BindingFlags.Public | BindingFlags.Instance))
        {
            var value = prop.GetValue(settings);
            result.AppendLine($"// - {prop.Name}: {value}");
        }
        return result.ToString();
    }
}
