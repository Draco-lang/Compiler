namespace Draco.Compiler.Api.Syntax;

{{include 'common.sbncs'}}

{{for $node in Nodes}}
    {{summary($node.Documentation)}}
    public {{abstract_sealed($node)}} partial class {{$node.Name}} {{base($node)}}
    {
        {{for $field in $node.Fields}}
            {{summary($field.Documentation)}}
            public
            {{if $field.Override}}
                override
            {{end}}
            {{$field.Type}} {{$field.Name}} => this.{{camel_case($field.Name)}} ??= ToRed(this.green.{{$field.Name}});
            private Internal.Syntax.{{$field.Type}} {{camel_case($field.Name)}};
        {{end}}

        {{children($node)}}

        private readonly Internal.Syntax.{{$node.Name}} green;

        internal {{$node.Name}}(Internal.Syntax.{{$node.Name}} green)
        {
            this.green = green;
        }
    }
{{end}}
