using Microsoft.CodeAnalysis;

namespace Draco.RedGreenTree.SourceGeneration;

[Generator]
internal sealed class AttributeSourceGenerator : IIncrementalGenerator
{
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        var generateAttribute = context.CompilationProvider.Select((compilation, ct) =>
        {
            var attribute = compilation.GetTypeByMetadataName("Draco.RedGreenTree.RedTreeAttribute");
            return attribute is null;
        });

        context.RegisterImplementationSourceOutput(generateAttribute, (ctx, generateGreenTreeAttribute) =>
        {
            if (!generateGreenTreeAttribute) return;

            var source =
@"// <auto-generated />

namespace Draco.RedGreenTree;

[global::System.AttributeUsage(global::System.AttributeTargets.Class)]
internal sealed class RedTreeAttribute : global::System.Attribute
{
    public global::System.Type GreenType { get; }

    public RedTreeAttribute(global::System.Type greenType)
    {
        this.GreenType = greenType;
    }
}
";
            ctx.AddSource("RedTreeAttribute.g.cs", source);
        });
    }
}
