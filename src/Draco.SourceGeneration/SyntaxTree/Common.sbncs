{{func summary(doc)}}
    {{if doc}}
        /// <summary>
        /// {{doc}}
        /// </summary>
    {{end}}
{{end}}

{{func base(node)}}
    {{if node.Base}}
        : {{node.Base.Name}}
    {{end}}
{{end}}

{{func abstract_sealed(node)}}
    {{if node.IsAbstract}}
        abstract
    {{else}}
        sealed
    {{end}}
{{end}}

{{func protected_public(node)}}
    {{if node.IsAbstract}}
        protected
    {{else}}
        public
    {{end}}
{{end}}

{{func comma_separated}}
    {{$first = true}}
    {{for $element in $0}}
        {{if !$first}}
            ,
        {{end}}
        {{$first = false}}
        {{$$}}
    {{end}}
{{end}}

{{func params(fields)}}
    {{wrap comma_separated fields}}
        {{$element.Type}} {{camel_case($element.Name)}}
    {{end}}
{{end}}

{{func args(fields)}}
    {{wrap comma_separated fields}}
        {{camel_case($element.Name)}}
    {{end}}
{{end}}

{{func children(node)}}
    {{if !node.IsAbstract}}
        public override IEnumerable<{{Root.Name}}> Children
        {
            get
            {
                {{for $field in node.Fields}}
                    yield return this.{{$field.Name}};
                {{end}}
                yield break;
            }
        }
    {{end}}
{{end}}
