<?xml version="1.0" encoding="utf-8"?>
<Tree Root="SyntaxNode">
  <PredefinedNode Name="SyntaxNode" />

  <Node Name="CompilationUnitSyntax" Base="SyntaxNode">
    <Documentation>
      Contains all declarations within an entire compilation unit.
    </Documentation>

    <Field Name="Declarations" Type="SyntaxList&lt;DeclarationSyntax&gt;">
      <Documentation>
        All declaration syntaxes within the compilation unit.
      </Documentation>
    </Field>
    <Field Name="End" Type="SyntaxToken">
      <Documentation>
        The end of input token.
      </Documentation>
    </Field>
  </Node>

  <AbstractNode Name="DeclarationSyntax" Base="SyntaxNode">
    <Documentation>
      Any declaration.
    </Documentation>
  </AbstractNode>

  <Node Name="UnexpectedDeclarationSyntax" Base="DeclarationSyntax">
    <Documentation>
      Unexpected input in declaration context.
    </Documentation>

    <Field Name="Nodes" Type="SyntaxList&lt;SyntaxNode&gt;">
      <Documentation>
        The unexpected syntax nodes.
      </Documentation>
    </Field>
    <Field Name="Diagnostics" Type="ImmutableArray&lt;Diagnostic&gt;" Override="true" />
  </Node>

  <Node Name="FunctionDeclarationSyntax" Base="DeclarationSyntax">
    <Documentation>
      A function declaration.
    </Documentation>

    <Field Name="FunctionKeyword" Type="SyntaxToken">
      <Documentation>
        The 'func' keyword starting the declaration.
      </Documentation>

      <Token Kind="KeywordFunc" />
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <Documentation>
        The name of the declared function.
      </Documentation>

      <Token Kind="Identifier" />
    </Field>
    <Field Name="OpenParen" Type="SyntaxToken">
      <Documentation>
        The open parenthesis before the parameter list.
      </Documentation>

      <Token Kind="ParenOpen" />
    </Field>
    <Field Name="ParameterList" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;">
      <Documentation>
        The parameters this function declares.
      </Documentation>
    </Field>
    <Field Name="CloseParen" Type="SyntaxToken">
      <Documentation>
        The close parenthesis after the parameter list.
      </Documentation>

      <Token Kind="ParenClose" />
    </Field>
    <Field Name="ReturnType" Type="TypeSpecifierSyntax">
      <Documentation>
        The return type of the function.
      </Documentation>
    </Field>
    <Field Name="Body" Type="FunctionBodySyntax">
      <Documentation>
        The body of the function.
      </Documentation>
    </Field>
  </Node>

  <Node Name="LabelDeclarationSyntax" Base="DeclarationSyntax">
    <Documentation>
      A label declaration.
    </Documentation>

    <Field Name="Name" Type="SyntaxToken">
      <Documentation>
        The name of the declared label.
      </Documentation>

      <Token Kind="Identifier" />
    </Field>
    <Field Name="Colon" Type="SyntaxToken">
      <Documentation>
        The colon after the label name.
      </Documentation>

      <Token Kind="Colon" />
    </Field>
  </Node>

  <Node Name="VariableDeclarationSyntax" Base="DeclarationSyntax">
    <Documentation>
      A variable declaration.
    </Documentation>

    <Field Name="Keyword" Type="SyntaxToken">
      <Documentation>
        The keyword introducing the variable, either 'var' or 'val'.
      </Documentation>

      <Token Kind="KeywordVar" />
      <Token Kind="KeywordVal" />
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <Documentation>
        The name of the declared variable.
      </Documentation>

      <Token Kind="Identifier" />
    </Field>
    <Field Name="Type" Type="TypeSpecifierSyntax">
      <Documentation>
        The type of the declared variable.
      </Documentation>
    </Field>
    <Field Name="Value" Type="ValueSpecifierSyntax">
      <Documentation>
        The initializer value for the variable.
      </Documentation>
    </Field>
    <Field Name="Semicolon" Type="SyntaxToken">
      <Documentation>
        The semicolon closing the variable declaration.
      </Documentation>

      <Token Kind="Semicolon" />
    </Field>
  </Node>

  <AbstractNode Name="TypeExpressionSyntax" Base="SyntaxNode">
    <Documentation>
      Any type expression.
    </Documentation>
  </AbstractNode>

  <Node Name="UnexpectedTypeExpressionSyntax" Base="TypeExpressionSyntax">
    <Documentation>
      Unexpected input in type expression context.
    </Documentation>

    <Field Name="Nodes" Type="SyntaxList&lt;SyntaxNode&gt;">
      <Documentation>
        The unexpected syntax nodes.
      </Documentation>
    </Field>
    <Field Name="Diagnostics" Type="ImmutableArray&lt;Diagnostic&gt;" Override="true" />
  </Node>

  <Node Name="NameTypeExpressionSyntax" Base="TypeExpressionSyntax">
    <Documentation>
      A single identifier referencing a type name.
    </Documentation>

    <Field Name="Name" Type="SyntaxNode">
      <Documentation>
        The identifier referencing the type.
      </Documentation>

      <Token Kind="Identifier" />
    </Field>
  </Node>
</Tree>
