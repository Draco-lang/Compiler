using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;

namespace Draco.Dap.Model;

{{include 'Utils.sbncs'}}

{{func summary(doc)}}
    {{if !doc}}{{ret}}{{end}}
    /// <summary>
    {{~for $line in split_lines(doc)-}}
        /// {{$line}}
    {{~end-}}
    /// </summary>
{{end}}

{{func base(class)}}
    {{if !class}}{{ret}}{{end}}
    : {{class.Name}}
{{end}}

{{func type(t)}}
    {{case t.Discriminator}}
    {{when 'Builtin'}} {{t.FullName}}
    {{when 'Declaration'}}
        {{t.Declaration.Name}}
    {{when 'Nullable'}} {{type(t.Type)}}?
    {{when 'Array'}} IList<{{type(t.ElementType)}}>
    {{when 'DiscriminatedUnion'}}
        OneOf<{{wrap separated(', ', t.Alternatives)}}{{type($element)}}{{end}}>
    {{end}}
{{end}}

{{func property(decl)}}
    {{summary(decl.Documentation)}}
    [JsonPropertyName({{string.literal(decl.SerializedName)}})]
    [JsonIgnore(Condition = JsonIgnoreCondition.{{if decl.OmitIfNull}}WhenWritingDefault{{else}}Never{{end}})]
    {{if !decl.OmitIfNull}}
        [JsonRequired]
    {{end}}
    public
    {{if decl.IsAbstract}}abstract{{end}}
    {{if decl.IsOverride}}override{{end}}
    {{$use_required_modifier = !decl.IsAbstract && !decl.IsOverride}}
    {{if $use_required_modifier}}required{{end}}
    {{type(decl.Type)}} {{decl.Name}}
    {{if decl.Value}}
        {{if decl.IsAbstract}}
            get;
        {{else}}
            =>
            {{case decl.ValueDiscriminator}}
            {{when 'String'}}
                {{string.literal(decl.Value)}}
            {{end}}
            ;
        {{end}}
    {{else}}
        {
            get;
            {{if !decl.IsAbstract}}set;{{end}}
        }
    {{end}}
{{end}}

{{func class(cl)}}
    {{summary(cl.Documentation)}}
    public
    {{if cl.IsAbstract}}abstract{{end}}
    class {{cl.Name}} {{base(cl.Base)}}
    {
        {{for $nested in cl.NestedClasses}}
            {{class($nested)}}
        {{end}}

        {{for $prop in cl.Properties}}
            {{property($prop)}}
        {{end}}
    }
{{end}}

#nullable enable
#pragma warning disable CS9042
{{for $class in Classes}}
    {{class($class)}}
{{end}}
#pragma warning restore CS9042
